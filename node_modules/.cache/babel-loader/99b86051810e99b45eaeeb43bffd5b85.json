{"ast":null,"code":"var _jsxFileName = \"/Users/melisamert/Desktop/react-redux-movie-app/movie-app/src/components/MoviesList.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MovieCard from './MovieCard';\nimport { Grid } from 'semantic-ui-react';\nimport { HashLoader } from 'react-spinners'; // Stateless Component\n// Gelen movies propuna göre MoviesList şekille\n\nconst MoviesList = ({\n  movies\n}) => {\n  const emptyMessage = React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"There are no movies yet. \"); // <div key={movie._id}>{movie.title}</div>\n  // Hatanın Alınmadığı Durumlarda servisdeki Filmler Listelenecek\n\n  const moviesList = React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, movies && movies.movieList ? React.createElement(Grid, {\n    stackable: true,\n    columns: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, movies.movieList.map(movie => React.createElement(MovieCard, {\n    key: movie._id,\n    movie: movie,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }))) : 'Movies Not Found'));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, movies.length === 0 ? emptyMessage : moviesList);\n}; // backend service'den gelen movie objesi ve movies objesi içerisindeki movie listi geçirilecek\n// bu nedenle yapılandırma gerekiyor\n\n\nMoviesList.propTypes = {\n  movies: PropTypes.shape({\n    movieList: PropTypes.array.isRequired\n  }).isRequired\n};\nexport default MoviesList;","map":{"version":3,"sources":["/Users/melisamert/Desktop/react-redux-movie-app/movie-app/src/components/MoviesList.js"],"names":["React","PropTypes","MovieCard","Grid","HashLoader","MoviesList","movies","emptyMessage","moviesList","movieList","map","movie","_id","length","propTypes","shape","array","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAAQC,IAAR,QAAmB,mBAAnB;AACA,SAAQC,UAAR,QAAyB,gBAAzB,C,CAEA;AACA;;AACA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAC/B,QAAMC,YAAY,GACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,CAD+B,CAIhC;AACA;;AACC,QAAMC,UAAU,GACZ,0CACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMQF,MAAM,IAAIA,MAAM,CAACG,SAAjB,GACA,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEH,MAAM,CAACG,SAAP,CAAiBC,GAAjB,CAAqBC,KAAK,IACzB,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEA,KAAK,CAACC,GAAtB;AAA2B,IAAA,KAAK,EAAED,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADF,CADA,GAKE,kBAXV,CADA,CADJ;AAmBA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,MAAM,CAACO,MAAP,KAAkB,CAAlB,GAAsBN,YAAtB,GAAqCC,UAD1C,CADJ;AAKH,CA9BD,C,CAgCA;AACA;;;AAEAH,UAAU,CAACS,SAAX,GAAuB;AACnBR,EAAAA,MAAM,EAAEL,SAAS,CAACc,KAAV,CAAgB;AACpBN,IAAAA,SAAS,EAAER,SAAS,CAACe,KAAV,CAAgBC;AADP,GAAhB,EAELA;AAHgB,CAAvB;AAMA,eAAeZ,UAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport MovieCard from './MovieCard';\nimport {Grid} from 'semantic-ui-react';\nimport {HashLoader} from 'react-spinners';\n\n// Stateless Component\n// Gelen movies propuna göre MoviesList şekille\nconst MoviesList = ({ movies }) => {\n    const emptyMessage = (\n        <p>There are no movies yet. </p>\n    );\n   // <div key={movie._id}>{movie.title}</div>\n   // Hatanın Alınmadığı Durumlarda servisdeki Filmler Listelenecek\n    const moviesList = (\n        <>\n        <div>\n          {/* <HashLoader\n             color={'#123abc'}\n             loading={true}\n          /> */}\n            {\n                movies && movies.movieList  ? \n                <Grid stackable columns={3}>\n                 {movies.movieList.map(movie =>\n                   <MovieCard key={movie._id} movie={movie}></MovieCard>)}\n                </Grid>\n                : 'Movies Not Found'\n            }\n        </div>\n      </>\n    );\n\n    return (\n        <div>\n            {movies.length === 0 ? emptyMessage : moviesList}\n        </div>\n    );\n};\n\n// backend service'den gelen movie objesi ve movies objesi içerisindeki movie listi geçirilecek\n// bu nedenle yapılandırma gerekiyor\n\nMoviesList.propTypes = {\n    movies: PropTypes.shape({\n        movieList: PropTypes.array.isRequired,\n    }).isRequired\n};\n\nexport default MoviesList;"]},"metadata":{},"sourceType":"module"}