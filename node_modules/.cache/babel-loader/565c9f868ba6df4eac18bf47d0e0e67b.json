{"ast":null,"code":"var _jsxFileName = \"/Users/melisamert/Desktop/react-redux-movie-app/movie-app/src/components/MoviesList.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // Stateless Component\n// Gelen movies propuna göre MoviesList şekille\n\nconst MoviesList = ({\n  movies\n}) => {\n  const emptyMessage = React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"There are no movies yet. \"); // Hatanın Alınmadığı Durumlarda servisdeki Filmler Listelenecek\n\n  const moviesList = React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, movies && movies.error && movies.error.response ? React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Error\") : React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Hata Yok\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, movies.length === 0 ? emptyMessage : moviesList);\n}; // backend service'den gelen movie objesi ve movies objesi içerisindeki movie listi geçirilecek\n// bu nedenle yapılandırma gerekiyor\n\n\nMoviesList.propTypes = {\n  movies: PropTypes.shape({\n    movies: PropTypes.array.isRequired\n  }).isRequired\n};\nexport default MoviesList;","map":{"version":3,"sources":["/Users/melisamert/Desktop/react-redux-movie-app/movie-app/src/components/MoviesList.js"],"names":["React","PropTypes","MoviesList","movies","emptyMessage","moviesList","error","response","length","propTypes","shape","array","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;AACA;;AACA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAC/B,QAAMC,YAAY,GACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,CAD+B,CAIhC;;AACC,QAAMC,UAAU,GACZ,0CACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMF,MAAM,IAAKA,MAAM,CAACG,KAAlB,IAA2BH,MAAM,CAACG,KAAP,CAAaC,QAAxC,GAAoD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAApD,GAAqE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAD3E,CADA,EAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJD,CADJ;AAWA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,MAAM,CAACK,MAAP,KAAkB,CAAlB,GAAsBJ,YAAtB,GAAqCC,UAD1C,CADJ;AAKH,CArBD,C,CAuBA;AACA;;;AAEAH,UAAU,CAACO,SAAX,GAAuB;AACnBN,EAAAA,MAAM,EAAEF,SAAS,CAACS,KAAV,CAAgB;AACpBP,IAAAA,MAAM,EAAEF,SAAS,CAACU,KAAV,CAAgBC;AADJ,GAAhB,EAELA;AAHgB,CAAvB;AAMA,eAAeV,UAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Stateless Component\n// Gelen movies propuna göre MoviesList şekille\nconst MoviesList = ({ movies }) => {\n    const emptyMessage = (\n        <p>There are no movies yet. </p>\n    );\n   // Hatanın Alınmadığı Durumlarda servisdeki Filmler Listelenecek\n    const moviesList = (\n        <>\n        <div>\n            { movies &&  movies.error && movies.error.response ?  <h3>Error</h3> : <h3>Hata Yok</h3> }\n        </div>\n         <div>\n\n       </div>\n      </>\n    );\n\n    return (\n        <div>\n            {movies.length === 0 ? emptyMessage : moviesList}\n        </div>\n    );\n};\n\n// backend service'den gelen movie objesi ve movies objesi içerisindeki movie listi geçirilecek\n// bu nedenle yapılandırma gerekiyor\n\nMoviesList.propTypes = {\n    movies: PropTypes.shape({\n        movies: PropTypes.array.isRequired,\n    }).isRequired\n};\n\nexport default MoviesList;"]},"metadata":{},"sourceType":"module"}