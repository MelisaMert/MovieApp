{"ast":null,"code":"import _defineProperty from \"/Users/melisamert/Desktop/react-redux-movie-app/movie-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// MOVIES REDUCER\nimport { FETCHED_MOVIES, FETCHED_MOVIES_ERROR } from '../actions/movies';\nconst initialState = {\n  fetching: false,\n  fetched: false,\n  movies: [],\n  error: {}\n};\nexport default ((state = [], action) => {\n  switch (action.type) {\n    case FETCHED_MOVIES:\n      return _objectSpread({}, state, {\n        movies: action.payload\n      });\n      break;\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/melisamert/Desktop/react-redux-movie-app/movie-app/src/reducers/movies.js"],"names":["FETCHED_MOVIES","FETCHED_MOVIES_ERROR","initialState","fetching","fetched","movies","error","state","action","type","payload"],"mappings":";;;;;;AAAA;AACA,SAASA,cAAT,EAAyBC,oBAAzB,QAAoD,mBAApD;AAEA,MAAMC,YAAY,GAAG;AAChBC,EAAAA,QAAQ,EAAE,KADM;AAEhBC,EAAAA,OAAO,EAAE,KAFO;AAGhBC,EAAAA,MAAM,EAAE,EAHQ;AAIhBC,EAAAA,KAAK,EAAE;AAJS,CAArB;AAOA,gBAAe,CAACC,KAAK,GAAE,EAAR,EAAYC,MAAZ,KAAuB;AAClC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKT,cAAL;AACE,+BACKO,KADL;AAEEF,QAAAA,MAAM,EAAEG,MAAM,CAACE;AAFjB;AAIF;;AACD;AACE,aAAOH,KAAP;AARL;AAUH,CAXD","sourcesContent":["// MOVIES REDUCER\nimport { FETCHED_MOVIES, FETCHED_MOVIES_ERROR} from '../actions/movies';\n\nconst initialState = {\n     fetching: false,\n     fetched: false,\n     movies: [],\n     error: {}\n};\n\nexport default (state =[], action) => {\n    switch(action.type){\n        case FETCHED_MOVIES:\n          return {\n            ...state,\n            movies: action.payload\n        };\n        break;\n       default:\n         return state;\n    }\n} "]},"metadata":{},"sourceType":"module"}