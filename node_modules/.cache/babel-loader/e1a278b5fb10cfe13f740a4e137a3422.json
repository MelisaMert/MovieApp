{"ast":null,"code":"import _defineProperty from \"/Users/melisamert/Desktop/react-redux-movie-app/movie-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FETCHED_MOVIES_FULLFILLED, FETCHED_MOVIES_REJECTED } from '../actions/movies';\nconst initialState = {\n  fetching: false,\n  fetched: false,\n  movies: [],\n  error: {}\n};\nlet actionType = \"\";\nexport default ((state = initialState, action) => {\n  actionType = action.type;\n  console.log('ActionType:', actionType, 'Movies:', action.payload);\n\n  switch (actionType) {\n    case FETCHED_MOVIES_FULLFILLED:\n      console.log('SWITCH ACTION TYPE', action.type, \"MOVIES\", action.payload);\n      return _objectSpread({}, state, {\n        movies: action.payload\n      });\n      break;\n\n    case FETCHED_MOVIES_REJECTED:\n      return _objectSpread({}, state, {\n        movies: action.payload\n      });\n      break;\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/melisamert/Desktop/react-redux-movie-app/movie-app/src/reducers/movies.js"],"names":["FETCHED_MOVIES_FULLFILLED","FETCHED_MOVIES_REJECTED","initialState","fetching","fetched","movies","error","actionType","state","action","type","console","log","payload"],"mappings":";;;;;;AAAA,SAASA,yBAAT,EAAqCC,uBAArC,QAAoE,mBAApE;AAEA,MAAMC,YAAY,GAAG;AAClBC,EAAAA,QAAQ,EAAE,KADQ;AAElBC,EAAAA,OAAO,EAAE,KAFS;AAGlBC,EAAAA,MAAM,EAAE,EAHU;AAIlBC,EAAAA,KAAK,EAAE;AAJW,CAArB;AAOA,IAAIC,UAAkB,GAAG,EAAzB;AAEA,gBAAe,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAC/CF,EAAAA,UAAU,GAAGE,MAAM,CAACC,IAApB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BL,UAA1B,EAAyC,SAAzC,EAAoDE,MAAM,CAACI,OAA3D;;AACC,UAAQN,UAAR;AACI,SAAKP,yBAAL;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAmCH,MAAM,CAACC,IAA1C,EAAgD,QAAhD,EAA2DD,MAAM,CAACI,OAAlE;AACA,+BACOL,KADP;AAEIH,QAAAA,MAAM,EAAEI,MAAM,CAACI;AAFnB;AAIA;;AACA,SAAMZ,uBAAN;AACA,+BACOO,KADP;AAEIH,QAAAA,MAAM,EAAEI,MAAM,CAACI;AAFnB;AAIA;;AACA;AACA,aAAOL,KAAP;AAfJ;AAiBF,CApBD","sourcesContent":["import { FETCHED_MOVIES_FULLFILLED , FETCHED_MOVIES_REJECTED } from '../actions/movies';\n\nconst initialState = {\n   fetching: false,\n   fetched: false,\n   movies: [],\n   error: {}\n};\n\nlet actionType: string = \"\";\n\nexport default (state = initialState, action) => {\n  actionType = action.type;\n  console.log('ActionType:',actionType,    'Movies:', action.payload);\n   switch (actionType){\n       case FETCHED_MOVIES_FULLFILLED:\n       console.log('SWITCH ACTION TYPE' , action.type, \"MOVIES\" , action.payload);\n       return {\n           ...state,\n           movies: action.payload\n       };\n       break;\n       case  FETCHED_MOVIES_REJECTED:\n       return {\n           ...state,\n           movies: action.payload\n       };\n       break;\n       default:\n       return state;\n   }\n}"]},"metadata":{},"sourceType":"module"}