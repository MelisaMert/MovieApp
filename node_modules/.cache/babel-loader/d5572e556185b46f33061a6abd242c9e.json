{"ast":null,"code":"var _jsxFileName = \"/Users/melisamert/Desktop/react-redux-movie-app/movie-app/src/components/NewMovieForm.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Checkbox, Form, Image, Message } from 'semantic-ui-react';\nimport InlineError from './InlineError';\nimport { Redirect } from 'react-router-dom'; // Action bu form içerisinde çalıştırılacak.\n\nclass NewMovieForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      cover: '',\n      errors: {},\n      isSubmit: false\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      const errors = this.validate();\n      this.setState({\n        errors\n      });\n\n      if (Object.keys(errors).length === 0) {\n        this.props.onNewMovieSubmit(this.state);\n      }\n\n      if (!this.props.newMovie.error.response) {\n        this.setState(isSubmit);\n      }\n    };\n\n    this.validate = () => {\n      const errors = {};\n      if (!this.state.title) errors.title = \"Cant be blank.\";\n      if (!this.state.cover) errors.cover = \"Cant be blank\";\n      return errors;\n    };\n  }\n\n  render() {\n    const errors = this.state.errors;\n    const form = React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      loading: this.props.newMovie.fetching,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      error: !!errors.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Title\"), errors.title && React.createElement(InlineError, {\n      message: errors.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"title\",\n      name: \"title\",\n      value: this.state.title,\n      onChange: this.handleChange,\n      placeholder: \"Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      error: !!errors.cover,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Cover Url\"), errors.cover && React.createElement(InlineError, {\n      message: errors.cover,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"cover\",\n      name: \"cover\",\n      value: this.state.cover,\n      onChange: this.handleChange,\n      placeholder: \"Cover Url\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Image, {\n      src: this.state.cover,\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"clearfix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Checkbox, {\n      label: \"I agree to the Terms and Conditions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Submit\"), this.props.newMovie.error.response && React.createElement(Message, {\n      negative: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Message.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"We're sorry!\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"A problem occured while recording.\")));\n    console.log('NewMovie Prop', this.props.newMovie.error.response);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, !this.props.newMovie.error.response && this.state.isSubmit ? React.createElement(Redirect, {\n      to: \"/movies\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }) : form);\n  }\n\n}\n\nNewMovieForm.propTypes = {\n  onNewMovieSubmit: PropTypes.func.isRequired\n};\nexport default NewMovieForm;","map":{"version":3,"sources":["/Users/melisamert/Desktop/react-redux-movie-app/movie-app/src/components/NewMovieForm.js"],"names":["React","Component","PropTypes","Button","Checkbox","Form","Image","Message","InlineError","Redirect","NewMovieForm","state","title","cover","errors","isSubmit","handleChange","e","setState","target","name","value","onSubmit","validate","Object","keys","length","props","onNewMovieSubmit","newMovie","error","response","render","form","fetching","console","log","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Checkbox, Form, Image, Message } from 'semantic-ui-react';\nimport InlineError from  './InlineError';\nimport { Redirect } from 'react-router-dom';\n\n// Action bu form içerisinde çalıştırılacak.\nclass NewMovieForm extends Component {\n   state = {\n      title: '',\n      cover: '',\n      errors: {},\n      isSubmit: false,\n   };\n    static propTypes = {\n      onNewMovieSubmit: PropTypes.func.isRequired\n    }\n    handleChange = (e) => {\n       this.setState({\n          [e.target.name]: e.target.value\n       });\n    }\n    onSubmit = () => {\n       const errors = this.validate();\n       this.setState({\n           errors,\n       });\n       if(Object.keys(errors).length === 0) {\n          this.props.onNewMovieSubmit(this.state);\n       }\n       if(!this.props.newMovie.error.response) {\n         this.setState(isSubmit)\n       }\n    };\n    validate = () => {\n       const errors = {};\n       if(!this.state.title) errors.title = \"Cant be blank.\"\n       if(!this.state.cover) errors.cover = \"Cant be blank\"\n       return errors;\n    };\n    render(){\n        const { errors } = this.state;\n        const form = (\n         <Form onSubmit={this.onSubmit} loading={this.props.newMovie.fetching}>\n          <Form.Field error={!!errors.title}>\n             <label>Title</label>\n              {errors.title && <InlineError message={errors.title}></InlineError>}\n             <input \n               id=\"title\"\n               name=\"title\"\n               value={this.state.title}\n               onChange={this.handleChange}\n               placeholder='Title'/>\n            </Form.Field>\n            <Form.Field error={!!errors.cover}>\n             <label>Cover Url</label>\n             {errors.cover && <InlineError message={errors.cover}></InlineError>}\n             <input \n               id=\"cover\"\n               name=\"cover\"\n               value={this.state.cover}\n               onChange={this.handleChange}\n               placeholder='Cover Url'></input>\n            </Form.Field>\n            <Form.Field>\n            <Image src={this.state.cover} size='small'/>\n            <div className=\"clearfix\"></div>\n            <Checkbox \n              label='I agree to the Terms and Conditions' />\n            </Form.Field>\n            <Button type='submit'>Submit</Button>\n            {\n              this.props.newMovie.error.response\n              &&\n              (\n                <Message negative>\n                <Message.Header>We're sorry!</Message.Header>\n                <p>A problem occured while recording.</p>\n                </Message>\n              ) \n            }\n          </Form>\n        );\n      console.log( 'NewMovie Prop' , this.props.newMovie.error.response);\n       return (\n         <div>\n          {!this.props.newMovie.error.response && this.state.isSubmit? <Redirect to=\"/movies\" /> : form } \n         </div>\n      );\n   }\n} \n\nexport default NewMovieForm;"]},"metadata":{},"sourceType":"module"}